import pandas as pd
import numpy as np
import streamlit as st
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment
from openpyxl.utils.dataframe import dataframe_to_rows

class VolleyballTournament:
    def __init__(self):
        self.teams = pd.DataFrame(columns=[
            "Squadra", "Referente", "Telefono", "Email", "Pagato", "Note"
        ])
        self.groups = {}
        self.matches = {}
        self.standings = {}
        self.playoffs = pd.DataFrame()
        self.final_phase = pd.DataFrame()
        
        # Configurazione torneo
        self.punti_vittoria = 3
        self.punti_parziale = 1  # Per le sconfitte 2-3

    # ... (Metodi della classe simili alla versione precedente ma ottimizzati)

def main():
    st.set_page_config(page_title("Gestione Torneo Pallavolo", layout="wide"))
    st.title("🏐 Torneo Pallavolo - 20 Squadre")
    
    if "torneo" not in st.session_state:
        st.session_state.torneo = VolleyballTournament()
    
    tab1, tab2, tab3, tab4, tab5 = st.tabs([
        "📝 Iscrizioni", 
        "⚔️ Gironi", 
        "🎯 Fasi Finali", 
        "🏆 Classifiche", 
        "💾 Esporta"
    ])

    with tab1:
        # Interfaccia per l'iscrizione squadre
        with st.expander("➕ Nuova Iscrizione", expanded=True):
            with st.form("form_iscrizione"):
                cols = st.columns(3)
                nome = cols[0].text_input("Nome Squadra*")
                referente = cols[1].text_input("Referente*")
                telefono = cols[2].text_input("Telefono*")
                email = cols[0].text_input("Email*")
                pagato = cols[1].selectbox("Pagamento", ["Si", "No"])
                note = cols[2].text_area("Note")
                
                if st.form_submit_button("Registra Squadra"):
                    # Validazione e salvataggio dati
                    if all([nome, referente, telefono, email]):
                        # ... logica aggiunta squadra
                    else:
                        st.error("Compila i campi obbligatori (*)")

        # Visualizzazione squadre iscritte
        if not st.session_state.torneo.teams.empty:
            st.subheader(f"Squadre Iscritte ({len(st.session_state.torneo.teams)}/20)")
            st.dataframe(st.session_state.torneo.teams, use_container_width=True)
        else:
            st.info("Nessuna squadra iscritta")

    with tab2:
        # Gestione gironi e risultati
        if len(st.session_state.torneo.teams) == 20:
            if not st.session_state.torneo.groups:
                if st.button("🔄 Genera Gironi"):
                    # Logica creazione 4 gironi da 5 squadre
                    # ... implementazione algoritmica
                    
            # Visualizzazione gironi e inserimento risultati
            # ... interfaccia avanzata per risultati

        else:
            st.warning("Servono esattamente 20 squadre per generare i gironi")

    # ... Altri tab con logica simile

if __name__ == "__main__":
    main()
